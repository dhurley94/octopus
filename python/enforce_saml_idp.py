import boto3
import botocore
from octopus import get_creds
from octopus import my_logging

def lambda_handler(event,context):
    # Event Sample
    # {"saml_xml":"", "bucket_name":"", "Id":"", "idp_name":""}

    # Name of SAML file generated by ADFS
    saml_xml = event["saml_xml"]

    # Retrieves SAML file from S3 bucket
    s3 = boto3.resource("s3")
    s3.meta.client.download_file(
        event["bucket_name"],
        "files/{}".format(saml_xml),
        '/tmp/{}'.format(saml_xml))

    # Opens file as a variable
    saml_doc = open("/tmp/{}".format(saml_xml),"r")

    # Gets credential to work with iam in desired account
    iam_client = get_creds(
        "iam",
        Id= event["Id"]
    )
    try:
        # Creates IDP on account
        create_idp = iam_client.create_saml_provider(
            SAMLMetadataDocument=str(saml_doc.read()),
            Name=event["idp_name"]
        )
        my_logging(create_idp)
    except botocore.exceptions.ClientError as e:
        my_logging(e)

        # If IDP already exists, update it
        if e.response["Error"]["Code"] != "": # TO DO update with error code
            update_idp = iam_client.update_saml_provider(
                SAMLMetadataDocument=str(saml_doc.read()),
                SAMLProviderArn="arn:aws:iam::{}:saml-provider/{}".format(event["Id"],event["idp_name"])
            )
            my_logging(update_idp)

    saml_doc.close()